openapi: 3.1.0
info:
  title: Arcane City - Action API
  version: 1.0.0
  description: REST API for working with Arcane City data from Open AI GPTs
  contact:
    name: Geoff Maddock
    email: geoff.maddock@gmail.com
servers:
  - url: https://arcane.city
    description: Production
tags:
  - name: entities
  - name: entity-types
  - name: events
  - name: event-types
  - name: tags
  - name: users
components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unexpected:
      description: Unexpected
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    Embeds:
      allOf:
        - $ref: "#/components/schemas/Pagination"
      type: object
      properties:
        data:
          type: array
          description: List of the current page of event embeds
          items:
            $ref: "#/components/schemas/EmbedResponse"
    EmbedResponse:
      type: object
      properties:
        embed:
          type: string
          maxLength: 65535
          description: Code that can be output to display embedded content, typically external content
          example: https://bandcamp.com/brillobox
    Photos:
      allOf:
        - $ref: "#/components/schemas/Pagination"
      type: object
      properties:
        data:
          type: array
          description: List of the photo responses
          items:
            $ref: "#/components/schemas/PhotoResponse"
    PhotoResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
          description: Unique ID of the photo
        name:
          type: string
          maxLength: 255
          description: The cannonical name of the photo
          example: Brillobox
        photo:
          type: string
          maxLength: 65535
          description: A link to a photo image
          example: https://some.url/imagelink.jpg
        thumbnail:
          type: string
          maxLength: 65535
          description: A link to a photo image thumbnail
          example: https://some.url/tb-imagelink.jpg
    EntityRequest:
      type: object
      required:
        - name
        - slug
      properties:
        name:
          type: string
          maxLength: 255
          description: The cannonical name of the enitity
          example: Brillobox
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the entity in kebab-case
          example: brillobox-bar
        short:
          type: string
          maxLength: 255
          description: A brief description of the enitity
          example: A two level bar and venue
        description:
          type: string
          maxLength: 65535
          description: Full description of the entity
          example: A two level bar and venue that specializes in indie music and vegetarian food
        entity_type_id:
          description: Relation to the entity type table that defines the type of an entity
          type: integer
          example: 1
        entity_status_id:
          description: The unique identifier of an entity type
          type: integer
          example: 1
        started_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the entity started to exist
        facebook_username:
          type: string
          maxLength: 64
          description: The entity's username on facebook
          example: johnsmith
        twitter_username:
          type: string
          maxLength: 64
          description: The entity's username on twitter
          example: johnsmith
        tag_list:
          type: array
          items: { "type": "integer" }
    EntityResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
          description: Unique ID of the entity
        name:
          type: string
          maxLength: 255
          description: The cannonical name of the enitity
          example: Brillobox
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the entity in kebab-case
          example: brillobox-bar
        short:
          type: string
          maxLength: 255
          description: A brief description of the enitity
          example: A two level bar and venue
        description:
          type: string
          maxLength: 65535
          description: Full description of the entity
          example: A two level bar and venue that specializes in indie music and vegetarian food
        entity_type:
          $ref: "#/components/schemas/EntityType"
        entity_status:
          $ref: "#/components/schemas/EntityStatus"
        created_by:
          $ref: "#/components/schemas/UserSimple"
        updated_by:
          $ref: "#/components/schemas/UserSimple"
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the entity was created
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the entity was last updated
        started_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the entity started to exist
        facebook_username:
          type: string
          maxLength: 64
          description: The entity's username on facebook
          example: johnsmith
        twitter_username:
          type: string
          maxLength: 64
          description: The entity's username on twitter
          example: johnsmith
        links:
          type: array
          items:
            $ref: "#/components/schemas/Link"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
    Entities:
      allOf:
        - $ref: "#/components/schemas/Pagination"
      type: object
      properties:
        data:
          type: array
          description: List of the current page of entities
          items:
            $ref: "#/components/schemas/EntityResponse"
    EntityType:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          description: A name of an entity type
          example: Group
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the entity type in kebab-case
          example: group-slug
        short:
          type: string
          example: A multi-member entity
          description: A brief description of the entity type
          maxLength: 255
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the entity type was created
          readOnly: true
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the entity type was last updated
          readOnly: true
    EntityTypes:
      allOf:
        - $ref: "#/components/schemas/Pagination"
      type: object
      properties:
        data:
          type: array
          description: List of the current page of events
          items:
            $ref: "#/components/schemas/EntityType"
    EntityStatus:
      type: object
      required:
        - name
      properties:
        id:
          description: The unique identifier of an entity type
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          description: A name of an entity status
          example: Active
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the entity status was created
          readOnly: true
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the entity status was last updated
          readOnly: true
    EventRequest:
      type: object
      required:
        - id
        - name
        - slug
        - start_at
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          example: October's Lazercrunk at the Brillobox
          description: The cannonical name of the event
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the event in kebab-case
          example: octobers-lazercrunk-at-the-brillobox
        short:
          type: [string, "null"]
          example: a really fun dj night featuring performers from around the world
          description: A brief description of the event
          maxLength: 255
        visibility_id:
          type: integer
          example: 1
          description: Relation to the visibility table that defines the visibility of events
        description:
          type: string
          description: Full description of the event
          example: a really fun dj night featuring performers from around the world and locally playing new electronic music
          maxLength: 65535
        event_status_id:
          type: [integer, "null"]
          example: 1
          description: Relation to the event type table that defines the status of the event
        event_type_id:
          type: integer
          example: 1
          description: Relation to the event type table that defines the type of event
        promoter_id:
          type: [string, "null"]
          example: 1
          description: Relation to the entity table that defines the promoter of the event
        venue_id:
          type: [integer, "null"]
          readOnly: true
          example: 1
          description: Relation to the entity table that defines the venue for the event
        is_benefit:
          type: boolean
          description: Flag indicating if the event is a benefit
          example: true
        attending:
          description: The number of users who marked that they are attending the event
          type: integer
          example: 10
        like:
          description: The number of users who marked that they like the event
          type: integer
          example: 10
        presale_price:
          description: The price for a presale price for the event
          type: [number, "null"]
          example: 9.99
        door_price:
          description: The price of the show at the door
          type: [number, "null"]
          example: 19.99
        soundcheck_at:
          type: [string, "null"]
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event soundcheck is scheduled
        door_at:
          type: [string, "null"]
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event doors are scheduled to open
        start_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event starts
        end_at:
          type: [string, "null"]
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event starts
        series_id:
          type: [integer, "null"]
          example: 1
          description: Relation to the series table that defines the series for the event
        min_age:
          description: The minimum age requirement for the event in years
          type: [integer, "null"]
          example: 21
        primary_link:
          type: [string, "null"]
          description: The primary URL related to this event
          example: http://lazercrunk.com/october-2022
          maxLength: 255
        ticket_link:
          type: [string, "null"]
          description: The URL for buying a ticket to the event
          example: http://lazercrunk.com/october-2022/tickets
          maxLength: 255
        cancelled_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event was cancelled
        tag_list:
          type: array
          items: { "type": "integer" }
        entity_list:
          type: array
          items: { "type": "integer" }
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          example: October's Lazercrunk at the Brillobox
          description: The cannonical name of the event
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the event in kebab-case
          example: octobers-lazercrunk-at-the-brillobox
        short:
          type: string
          example: a really fun dj night featuring performers from around the world
          description: A brief description of the event
          maxLength: 255
        visibility_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the visibility table that defines the visibility of events
        description:
          type: string
          description: Full description of the event
          example: a really fun dj night featuring performers from around the world and locally playing new electronic music
          maxLength: 65535
        event_status_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the event type table that defines the status of the event
        event_type_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the event type table that defines the type of event
        promoter_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the entity table that defines the promoter of the event
        venue_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the entity table that defines the venue for the event
        is_benefit:
          type: boolean
          description: Flag indicating if the event is a benefit
          example: true
        attending:
          description: The number of users who marked that they are attending the event
          type: integer
          example: 10
        like:
          description: The number of users who marked that they like the event
          type: integer
          example: 10
        presale_price:
          description: The price for a presale price for the event
          type: number
          example: 9.99
        door_price:
          description: The price of the show at the door
          type: number
          example: 19.99
        soundcheck_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event soundcheck is scheduled
        door_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event doors are scheduled to open
        start_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event starts
        end_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event starts
        series_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the series table that defines the series for the event
        min_age:
          description: The minimum age requirement for the event in years
          type: integer
          example: 21
        primary_link:
          type: string
          description: The primary URL related to this event
          example: http://lazercrunk.com/october-2022
          maxLength: 255
        ticket_link:
          type: string
          description: The URL for buying a ticket to the event
          example: http://lazercrunk.com/october-2022/tickets
          maxLength: 255
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event was created
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event was last updated
        cancelled_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event was cancelled
        created_by:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the user table that defines the user who created the event
        updated_by:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the user table that defines the user who last updated the event
    EventResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          example: October's Lazercrunk at the Brillobox
          description: The cannonical name of the event
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the event in kebab-case
          example: octobers-lazercrunk-at-the-brillobox
        short:
          type: string
          example: a really fun dj night featuring performers from around the world
          description: A brief description of the event
          maxLength: 255
        visibility:
          $ref: "#/components/schemas/Visibility"
        description:
          type: string
          description: Full description of the event
          example: a really fun dj night featuring performers from around the world and locally playing new electronic music
          maxLength: 65535
        event_status:
          $ref: "#/components/schemas/EventStatusResponse"
        event_type:
          $ref: "#/components/schemas/EventTypeResponse"
        promoter:
          $ref: "#/components/schemas/EntityResponse"
        venue:
          $ref: "#/components/schemas/EntityResponse"
        is_benefit:
          type: boolean
          description: Flag indicating if the event is a benefit
          example: true
        attending:
          description: The number of users who marked that they are attending the event
          type: integer
          example: 10
        like:
          description: The number of users who marked that they like the event
          type: integer
          example: 10
        presale_price:
          description: The price for a presale price for the event
          type: number
          example: 9.99
        door_price:
          description: The price of the show at the door
          type: number
          example: 19.99
        soundcheck_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event soundcheck is scheduled
        door_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event doors are scheduled to open
        start_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event starts
        end_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event starts
        series:
          $ref: "#/components/schemas/SeriesResponse"
        min_age:
          description: The minimum age requirement for the event in years
          type: integer
          example: 21
        primary_link:
          type: string
          description: The primary URL related to this event
          example: http://lazercrunk.com/october-2022
          maxLength: 255
        ticket_link:
          type: string
          description: The URL for buying a ticket to the event
          example: http://lazercrunk.com/october-2022/tickets
          maxLength: 255
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event was created
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event was last updated
        cancelled_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event was cancelled
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
        created_by:
          $ref: "#/components/schemas/UserSimple"
        updated_by:
          $ref: "#/components/schemas/UserSimple"
    Events:
      allOf:
        - $ref: "#/components/schemas/Pagination"
      type: object
      properties:
        data:
          type: array
          description: List of the current page of events
          items:
            $ref: "#/components/schemas/EventResponse"
    EventStatusResponse:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          description: A name of an event status
          example: Active
        created_at:
          type: string
          example: "2018-03-20T09:12:28Z"
          format: date-time
          description: Date and time that the event status was created
          readOnly: true
        updated_at:
          type: string
          example: "2018-03-20T09:12:28Z"
          format: date-time
          description: Date and time that the event status was last updated
          readOnly: true
    EventStatusRequest:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          description: A name of an event status
          example: Active
    EventStatuses:
      allOf: [$ref: "#/components/schemas/Pagination"]
      type: object
      properties:
        data:
          type: array
          description: List of the current page of event statueses
          items:
            "$ref": "#/components/schemas/EventStatusResponse"
    EventTypeRequest:
      type: object
      required:
        - name
        - slug
      properties:
        name:
          type: string
          maxLength: 255
          description: A name of an event type
          example: Concert
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the event type in kebab-case
          example: concert
        short:
          type: string
          example: An event featuring live performances
          description: A brief description of the event type
          maxLength: 255
    EventTypeResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          description: A name of an event type
          example: Concert
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the event type in kebab-case
          example: concert
        short:
          type: string
          example: An event featuring live performances
          description: A brief description of the event type
          maxLength: 255
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event type  was created
          readOnly: true
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the event type was last updated
          readOnly: true
    EventTypes:
      allOf:
        - $ref: "#/components/schemas/Pagination"
      type: object
      properties:
        data:
          type: array
          description: List of the current page of events
          items:
            $ref: "#/components/schemas/EventTypeResponse"
    Link:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        title:
          type: string
          maxLength: 255
          description: The title attribute set on the link
          example: This is the lazercrunk website.
        text:
          type: string
          maxLength: 255
          description: The display text for the link
          example: Lazercrunk Website
        url:
          type: string
          maxLength: 255
          description: A url representing a link
          example: https://lazercrunk.com
        is_primary:
          type: boolean
          description: Flag indicating that the link is primary for it's related entity
          example: true
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the entity type was created
          readOnly: true
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the entity type was last updated
          readOnly: true
    Links:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/Link"
    Location:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          description: The name of the location
          example: Brillobox
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the series in kebab-case
          example: brillobox-bar
        address_line_one:
          type: string
          maxLength: 255
          description: First line of the address
          example: 100 East Street
        address_line_two:
          type: string
          maxLength: 255
          description: Second line of the address
          example: Suite 9000
        neighborhood:
          type: string
          maxLength: 255
          description: Neighborhood the location is in
          example: Bloomfield
        city:
          type: string
          maxLength: 255
          description: City of the location
          example: Pittsburgh
        state:
          type: string
          maxLength: 5
          description: State of the location
          example: PA
        postal_code:
          type: string
          maxLength: 15
          description: Postal code of the location
          example: "15224"
        country:
          type: string
          maxLength: 64
          description: Country of the location
          example: USA
        latitude:
          type: number
          description: Latitude of the location
          example: 0
        longitude:
          type: number
          description: longitude of the location
          example: 0
        visibility:
          $ref: "#/components/schemas/Visibility"
        map_url:
          type: string
          maxLength: 128
          description: URL of the map location
          example: USA
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the entity type was created
          readOnly: true
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the entity type was last updated
          readOnly: true
    LocationRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          description: The name of the location
          example: Brillobox
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the series in kebab-case
          example: brillobox-bar
        address_line_one:
          type: string
          maxLength: 255
          description: First line of the address
          example: 100 East Street
        address_line_two:
          type: string
          maxLength: 255
          description: Second line of the address
          example: Suite 9000
        neighborhood:
          type: string
          maxLength: 255
          description: Neighborhood the location is in
          example: Bloomfield
        city:
          type: string
          maxLength: 255
          description: City of the location
          example: Pittsburgh
        state:
          type: string
          maxLength: 5
          description: State of the location
          example: PA
        postal_code:
          type: string
          maxLength: 15
          description: Postal code of the location
          example: "15224"
        country:
          type: string
          maxLength: 64
          description: Country of the location
          example: USA
        latitude:
          type: number
          description: Latitude of the location
          example: 0
        longitude:
          type: number
          description: longitude of the location
          example: 0
        visibility_id:
          type: integer
          description: Type of visibility
          example: 1
        locatoin_type_id:
          type: integer
          description: Type of location
          example: 1
        map_url:
          type: string
          maxLength: 128
          description: URL of the map location
          example: USA
    OccurrenceDay:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          description: A name of an occurrence day
          example: Group
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the occurrence day in kebab-case
          example: octobers-lazercrunk-at-the-brillobox
        short:
          type: string
          example: A multi-member occurrence
          description: A brief description of the occurrence day
          maxLength: 255
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the occurrence day was created
          readOnly: true
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the occurrence day was last updated
          readOnly: true
    OccurrenceType:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          description: A name of an occurrence type
          example: Group
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the occurrence type in kebab-case
          example: octobers-lazercrunk-at-the-brillobox
        short:
          type: string
          example: A multi-member occurrence
          description: A brief description of the occurrence type
          maxLength: 255
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the occurrence type was created
          readOnly: true
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the occurrence type was last updated
          readOnly: true
    OccurrenceWeek:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          description: A name of an occurrence week
          example: Group
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the occurrence week in kebab-case
          example: octobers-lazercrunk-at-the-brillobox
        short:
          type: string
          example: A multi-member occurrence
          description: A brief description of the occurrence week
          maxLength: 255
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the occurrence week was created
          readOnly: true
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the occurrence week was last updated
          readOnly: true
    Role:
      type: object
      required:
        - name
        - slug
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          maxLength: 255
          description: Name of the role
          example: Venue
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the role in kebab-case
          example: venue
        short:
          type: string
          maxLength: 255
          description: A brief description of the role
          example: Event promoter
        created_at:
          type: string
          example: "2018-03-20T09:12:28Z"
          format: date-time
          description: Date and time that the role was created
          readOnly: true
        updated_at:
          type: string
          example: "2018-03-20T09:12:28Z"
          format: date-time
          description: Date and time that the role was last updated
          readOnly: true
    RoleRequest:
      type: object
      required:
        - name
        - slug
      properties:
        name:
          type: string
          maxLength: 255
          description: Name of the role
          example: Venue
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the role in kebab-case
          example: venue
        short:
          type: string
          maxLength: 255
          description: A brief description of the role
          example: Event promoter
    Roles:
      allOf: [$ref: "#/components/schemas/Pagination"]
      type: object
      properties:
        data:
          type: array
          description: List of the current page of roles
          items:
            "$ref": "#/components/schemas/Role"
    Series:
      type: object
      required:
        - id
        - name
        - slug
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          example: Lazercrunk, First Fridays of the Month
          description: The cannonical name of the series
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the series in kebab-case
          example: lazercrunk-first-fridays-of-the-month
        short:
          type: string
          example: a really fun monthly dj night featuring performers from around the world
          description: A brief description of the series
          maxLength: 255
        visibility_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the visibility table that defines the visibility of series
        description:
          type: string
          description: Full description of the series
          example:
            a really fun monthly dj night featuring performers from around the world and locally playing new electronic
            music
          maxLength: 65535
        event_type_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the event type table that defines the type of series
        occurrence_type_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the occurrence type table that defines the type of occurrence
        occurrence_week_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the occurrence week table that defines the occurrence week of the month
        occurrence_day_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the occurrence day table that defines the occurrence day of the week
        hold_date:
          type: boolean
          description: Flag indicating that there is a request to hold this date open
          example: true
        promoter_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the entity table that defines the promoter for the series
        venue_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the entity table that defines the venue for the series
        is_benefit:
          type: boolean
          description: Flag indicating if the series is a benefit
          example: true
        attending:
          description: The number of users who marked that they are attending the series
          type: integer
          example: 10
        like:
          description: The number of users who marked that they like the series
          type: integer
          example: 10
        presale_price:
          description: The price for a presale price for the series
          type: [number, "null"]
          example: 9.99
        door_price:
          description: The price of the show at the door
          type: [number, "null"]
          example: 19.99
        soundcheck_at:
          type: [string, "null"]
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the series soundcheck is scheduled
        door_at:
          type: [string, "null"]
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the series doors are scheduled to open
        start_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the series starts
        end_at:
          type: [string, "null"]
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the series ends
        min_age:
          description: The minimum age requirement for the series in years
          type: integer
          example: 21
        primary_link:
          type: [string, "null"]
          description: The primary URL related to this series
          example: http://lazercrunk.com/october-2022
          maxLength: 255
        ticket_link:
          type: [string, "null"]
          description: The URL for buying a ticket to the series
          example: http://lazercrunk.com/october-2022/tickets
          maxLength: 255
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the series was created
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the series was last updated
        cancelled_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the series was cancelled
        created_by:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the user table that defines the user who created the series
        updated_by:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the user table that defines the user who last updated the series
    SeriesResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          example: Lazercrunk, First Fridays of the Month
          description: The cannonical name of the series
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the series in kebab-case
          example: lazercrunk-first-fridays-of-the-month
        short:
          type: string
          example: a really fun monthly dj night featuring performers from around the world
          description: A brief description of the series
          maxLength: 255
        visibility:
          $ref: "#/components/schemas/Visibility"
        description:
          type: string
          description: Full description of the series
          example:
            a really fun monthly dj night featuring performers from around the world and locally playing new electronic
            music
          maxLength: 65535
        event_type:
          $ref: "#/components/schemas/EventTypeResponse"
        occurrence_type:
          $ref: "#/components/schemas/OccurrenceType"
        occurrence_week:
          $ref: "#/components/schemas/OccurrenceWeek"
        occurrence_day:
          $ref: "#/components/schemas/OccurrenceDay"
        hold_date:
          type: boolean
          description: Flag indicating that there is a request to hold this date open
          example: true
        promoter_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the entity table that defines the promoter of the series
        venue_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the entity table that defines the venue for the series
        is_benefit:
          type: boolean
          description: Flag indicating if the series is a benefit
          example: true
        attending:
          description: The number of users who marked that they are attending the series
          type: integer
          example: 10
        like:
          description: The number of users who marked that they like the series
          type: integer
          example: 10
        presale_price:
          description: The price for a presale price for the series
          type: number
          example: 9.99
        door_price:
          description: The price of the show at the door
          type: number
          example: 19.99
        soundcheck_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the series soundcheck is scheduled
        door_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the series doors are scheduled to open
        start_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the series starts
        end_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the series starts
        min_age:
          description: The minimum age requirement for the series in years
          type: integer
          example: 21
        primary_link:
          type: string
          description: The primary URL related to this series
          example: http://lazercrunk.com/october-2022
          maxLength: 255
        ticket_link:
          type: string
          description: The URL for buying a ticket to the series
          example: http://lazercrunk.com/october-2022/tickets
          maxLength: 255
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the series was created
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the series was last updated
        cancelled_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the series was cancelled
        created_by:
          $ref: "#/components/schemas/UserSimple"
        updated_by:
          $ref: "#/components/schemas/UserSimple"
    Seriess:
      allOf:
        - $ref: "#/components/schemas/Pagination"
      type: object
      properties:
        data:
          type: array
          description: List of the current page of series
          items:
            $ref: "#/components/schemas/SeriesResponse"
    Tag:
      type: object
      required:
        - name
        - tag_type_id
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          description: Name of the tag
          example: post punk
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          description: A unique identifier name for the tag in kebab-case
          example: post-punk
        tag_type_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the tag type table that defines the type of tag
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the tag was created
          readOnly: true
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the tag was last updated
          readOnly: true
    Tags:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/Tag"
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          description: Name of the user
          example: john.smith
          maxLength: 255
        password:
          type: string
          description: Encrypted password of the user
          example: abcdefg
          maxLength: 60
        email:
          type: string
          description: Email address of the user
          example: john.smith@gmail.com
          maxLength: 255
        user_status_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the user status table that defines the status of the user
        remember_token:
          type: string
          description: Token used to remember the user's logged in status
          example: ABCDEFGHI
          maxLength: 100
        email_verified_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the user's email was verified
          readOnly: true
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the user was created
          readOnly: true
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the user was last updated
          readOnly: true
    UserSimple:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          description: Name of the user
          example: john.smith
          maxLength: 255
        email:
          type: string
          description: Email address of the user
          example: john.smith@gmail.com
          maxLength: 255
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          description: Name of the user
          example: john.smith
          maxLength: 255
        password:
          type: string
          description: Encrypted password of the user
          example: abcdefg
          maxLength: 60
        email:
          type: string
          description: Email address of the user
          example: john.smith@gmail.com
          maxLength: 255
        user_status_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the user status table that defines the status of the user
        remember_token:
          type: string
          description: Token used to remember the user's logged in status
          example: ABCDEFGHI
          maxLength: 100
        email_verified_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the user's email was verified
          readOnly: true
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the user was created
          readOnly: true
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the user was last updated
          readOnly: true
    UserRequest:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          description: Name of the user
          example: john.smith
          maxLength: 255
        password:
          type: string
          description: Encrypted password of the user
          example: abcdefg
          maxLength: 60
        email:
          type: string
          description: Email address of the user
          example: john.smith@gmail.com
          maxLength: 255
        user_status_id:
          type: integer
          readOnly: true
          example: 1
          description: Relation to the user status table that defines the status of the user
        remember_token:
          type: string
          description: Token used to remember the user's logged in status
          example: ABCDEFGHI
          maxLength: 100
    Users:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/UserResponse"
    UserTokenResponse:
      type: object
      properties:
        token:
          type: string
          description: Valid user token
          example: ABCDEF12345
          maxLength: 255
    Visibility:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          example: Public
        created_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the visibility was created
          readOnly: true
        updated_at:
          type: string
          example: 2018-03-20T09:12:28Z
          format: date-time
          description: Date and time that the visibility was last updated
          readOnly: true
    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
    Pagination:
      type: object
      properties:
        current_page:
          description: The current page in the paginated list
          type: integer
        first_page_url:
          description: URL for the first page
          type: string
          example: https://dev.arcane.city/api/resources?page=1
        from:
          description: First element in the current page
          type: integer
          example: 1
        last_page:
          description: Last page of results
          type: integer
          example: 1
        last_page_url:
          description: URL for the first page
          type: string
          example: https://dev.arcane.city/api/resources?page=100
        links:
          description: Array of links used to paginate the list of entities
          type: array
          items: {}
        next_page_url:
          description: URL for the next page
          type: string
          example: https://dev.arcane.city/api/resources?page=2
        path:
          description: Path for the primary route
          type: string
          example: https://dev.arcane.city/api/resources
        per_page:
          description: Number of results per page
          type: integer
          example: 25
        prev_page_url:
          description: URL for the previous page
          type: string
          example: https://dev.arcane.city/api/resources?page=0
        to:
          description: Last element in the current page
          type: integer
          example: 25
        total:
          description: Total number of results from the request
          type: integer
          example: 100
        data:
          description: List of the current page of the paginated entity
          type: array
          items: {}
security:
  - basicAuth: []
paths:
  /api/events:
    post:
      tags:
        - events
      summary: Create Event
      operationId: createEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventResponse"
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventResponse"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - events
      summary: Get Events
      operationId: getEvents
      parameters:
        - name: filters[name]
          in: query
          required: false
          description: A filter query of the event name
          schema:
            type: string
            example: Lazercrunk
        - name: filters[venue]
          in: query
          required: false
          description: A filter query of the venue name
          schema:
            type: string
            example: Brillobox
        - name: filters[promoter]
          in: query
          required: false
          description: A filter query of the promoter name
          schema:
            type: string
            example: Cutups
        - name: filters[related]
          in: query
          required: false
          description: A filter query of related entity name
          schema:
            type: string
            example: 0h85
        - name: filters[series]
          in: query
          required: false
          description: A filter query of related series name
          schema:
            type: string
            example: Lazercrunk
        - name: filters[event_type]
          in: query
          required: false
          description: A filter query of related event type name
          schema:
            type: string
            example: Concert
        - name: filters[start_at][start]
          in: query
          required: false
          description: A filter query of the start time starting
          schema:
            type: string
            example: 2022-01-01 1:00:00
        - name: filters[start_at][end]
          in: query
          required: false
          description: A filter query of the start time ending
          schema:
            type: string
            example: 2022-02-01 2:00:00
        - name: filters[end_at][start]
          in: query
          required: false
          description: A filter query of the end time starting
          schema:
            type: string
            example: 2022-02-01 1:00:00
        - name: filters[end_at][end]
          in: query
          required: false
          description: A filter query of the end time ending
          schema:
            type: string
            example: 2022-01-01 2:00:00
        - name: filters[ages]
          in: query
          required: false
          description: A filter query of the end time ending
          schema:
            type: integer
            example: 21
        - name: filters[tag]
          in: query
          required: false
          description: A filter query of the event tags
          schema:
            type: string
            example: electronic
        - name: limit
          in: query
          required: false
          description: The limit on the number of results to return per page
          schema:
            type: integer
            example: 25
        - name: page
          in: query
          required: false
          description: The page number to return
          schema:
            type: integer
            example: 1
        - name: sort
          in: query
          required: false
          description: A column to be used to sort the query
          schema:
            type: string
            example: name
        - name: direction
          in: query
          required: false
          description: A string indicating the sort direction of the query (asc or desc)
          schema:
            type: string
            example: asc
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Events"
  /api/events/attending:
    get:
      parameters:
        - name: filters[name]
          in: query
          required: false
          description: A filter query of the event name
          schema:
            type: string
            example: "Lazercrunk"
        - name: filters[venue]
          in: query
          required: false
          description: A filter query of the venue name
          schema:
            type: string
            example: "Brillobox"
        - name: filters[promoter]
          in: query
          required: false
          description: A filter query of the promoter name
          schema:
            type: string
            example: "Cutups"
        - name: filters[related]
          in: query
          required: false
          description: A filter query of related entity name
          schema:
            type: string
            example: "0h85"
        - name: filters[series]
          in: query
          required: false
          description: A filter query of related series name
          schema:
            type: string
            example: "Lazercrunk"
        - name: filters[event_type]
          in: query
          required: false
          description: A filter query of related event type name
          schema:
            type: string
            example: "Concert"
        - name: filters[start_at][start]
          in: query
          required: false
          description: A filter query of the start time starting
          schema:
            type: string
            example: "2022-01-01 1:00:00"
        - name: filters[start_at][end]
          in: query
          required: false
          description: A filter query of the start time ending
          schema:
            type: string
            example: "2022-02-01 2:00:00"
        - name: filters[end_at][start]
          in: query
          required: false
          description: A filter query of the end time starting
          schema:
            type: string
            example: "2022-02-01 1:00:00"
        - name: filters[end_at][end]
          in: query
          required: false
          description: A filter query of the end time ending
          schema:
            type: string
            example: "2022-01-01 2:00:00"
        - name: filters[ages]
          in: query
          required: false
          description: A filter query of the end time ending
          schema:
            type: integer
            example: 21
        - name: filters[tag]
          in: query
          required: false
          description: A filter query of the event tags
          schema:
            type: string
            example: "electronic"
        - name: limit
          in: query
          required: false
          description: The limit on the number of results to return per page
          schema:
            type: integer
            example: 25
        - name: page
          in: query
          required: false
          description: The page number to return
          schema:
            type: integer
            example: 1
        - name: sort
          in: query
          required: false
          description: A column to be used to sort the query
          schema:
            type: string
            example: name
        - name: direction
          in: query
          required: false
          description: A string indicating the sort direction of the query (asc or desc)
          schema:
            type: string
            example: asc
      tags:
        - events
      summary: Get Events the Authenticated User is Attending
      operationId: getAttendingEvents
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Events"
  /api/events/{slug}:
    get:
      tags:
        - events
      summary: Get Event
      operationId: getEventBySlug
      parameters:
        - name: slug
          description: The unique identifier of the entity
          in: path
          required: true
          schema:
            type: string
            example: cutups-event
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventResponse"
    put:
      tags:
        - events
      summary: Update Events
      operationId: updateEventBySlug
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventResponse"
  /api/events/{slug}/photos:
    get:
      tags:
        - events
      summary: Get Events Photos
      operationId: getEventPhotosBySlug
      parameters:
        - name: slug
          description: The unique identifier of the entity
          in: path
          required: true
          schema:
            type: string
            example: strobe
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Photos"
  /api/events/{slug}/all-photos:
    get:
      tags:
        - events
      summary: Get All Related Events Photos
      operationId: getAllEventPhotosBySlug
      parameters:
        - name: slug
          description: The unique identifier of the event
          in: path
          required: true
          schema:
            type: string
            example: strobe
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Photos"
  /api/events/{id}/photos:
    post:
      tags:
        - events
      summary: Add Event Photo
      operationId: addEventPhotoById
      parameters:
        - name: id
          description: The unique identifier of the event
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhotoResponse"
  /api/entities:
    post:
      tags:
        - entities
      summary: Create Entity
      operationId: createEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityRequest"
      responses:
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityResponse"
    get:
      tags:
        - entities
      summary: Get Entities
      operationId: getEntities
      parameters:
        - name: filters[name]
          in: query
          required: false
          description: A filter query of the entity name
          schema:
            type: string
            example: cutups
        - name: filters[role]
          in: query
          required: false
          description: A filter query of the role name
          schema:
            type: string
            example: dj
        - name: filters[tag]
          in: query
          required: false
          description: A filter query of related tag
          schema:
            type: string
            example: jungle
        - name: filters[entity_status]
          in: query
          required: false
          description: A filter query of related entity status name
          schema:
            type: string
            example: Active
        - name: filters[entity_type]
          in: query
          required: false
          description: A filter query of related entity type name
          schema:
            type: string
            example: Individual
        - name: limit
          in: query
          required: false
          description: The limit on the number of results to return per page
          schema:
            type: integer
            example: 25
        - name: page
          in: query
          required: false
          description: The page number to return
          schema:
            type: integer
            example: 1
        - name: sort
          in: query
          required: false
          description: A column to be used to sort the query
          schema:
            type: string
            example: name
        - name: direction
          in: query
          required: false
          description: A string indicating the sort direction of the query (asc or desc)
          schema:
            type: string
            example: asc
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entities"
  /api/entities/{slug}:
    get:
      tags:
        - entities
      summary: Get Entity
      operationId: getEntityBySlug
      parameters:
        - name: slug
          description: The unique identifier of the entity
          in: path
          required: true
          schema:
            type: string
            example: cutups
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityResponse"
    put:
      tags:
        - entities
      summary: Update Entity
      operationId: updateEntityBySlug
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityResponse"
  /api/entities/{slug}/photos:
    get:
      tags:
        - entities
      summary: Get Entity Photos
      operationId: getEntityPhotosBySlug
      parameters:
        - name: slug
          description: The unique identifier of the entity
          in: path
          required: true
          schema:
            type: string
            example: strobe
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Photos"
  /api/entities/{id}/photos:
    post:
      tags:
        - entities
      summary: Add Entity Photo
      operationId: addEntityPhotoById
      parameters:
        - name: id
          description: The unique identifier of the entity
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PhotoResponse"
  /api/entity-types:
    get:
      tags:
        - entity-types
      summary: Get Entity Types
      operationId: getEntityTypes
      parameters:
        - name: filters[name]
          in: query
          required: false
          description: A filter query of the entity status name
          schema:
            type: string
            example: Group
        - name: limit
          in: query
          required: false
          description: The limit on the number of results to return per page
          schema:
            type: integer
            example: 25
        - name: page
          in: query
          required: false
          description: The page number to return
          schema:
            type: integer
            example: 1
        - name: sort
          in: query
          required: false
          description: A column to be used to sort the query
          schema:
            type: string
            example: name
        - name: direction
          in: query
          required: false
          description: A string indicating the sort direction of the query (asc or desc)
          schema:
            type: string
            example: asc
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pagination"
    post:
      tags:
        - entity-types
      summary: Create entity type
      operationId: createEntityType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityType"
      responses:
        "201":
          description: Successful response
          content:
            application/json: {}
  /api/entity-types/{entityTypeId}:
    get:
      tags:
        - entity-types
      summary: Get EntityType
      operationId: getEntityTypeById
      parameters:
        - name: entityTypeId
          description: The unique identifier of the entity type
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityType"
    put:
      tags:
        - entity-types
      summary: Update Entity Type
      operationId: updateEntityTypeById
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityType"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityType"
  /api/event-types:
    get:
      tags:
        - event-types
      summary: Get Event Types
      operationId: getEventTypes
      parameters:
        - name: filters[name]
          in: query
          required: false
          description: A filter query of the event status name
          schema:
            type: string
            example: Concert
        - name: limit
          in: query
          required: false
          description: The limit on the number of results to return per page
          schema:
            type: integer
            example: 25
        - name: page
          in: query
          required: false
          description: The page number to return
          schema:
            type: integer
            example: 1
        - name: sort
          in: query
          required: false
          description: A column to be used to sort the query
          schema:
            type: string
            example: name
        - name: direction
          in: query
          required: false
          description: A string indicating the sort direction of the query (asc or desc)
          schema:
            type: string
            example: asc
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventTypes"
    post:
      tags:
        - event-types
      summary: Create event type
      operationId: createEventType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventTypeRequest"
      responses:
        "201":
          description: Successful response
          content:
            application/json: {}
  /api/event-types/{eventTypeId}:
    get:
      tags:
        - event-types
      summary: Get EventType
      operationId: getEventTypeById
      parameters:
        - name: eventTypeId
          description: The unique identifier of the event type
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventTypeResponse"
    put:
      tags:
        - event-types
      summary: Update Event Type
      operationId: updateEventTypeById
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventTypeRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventTypeResponse"
  /api/event-statuses:
    get:
      tags:
        - event-statuses
      summary: Get Event Statuses
      operationId: getEventStatuses
      parameters:
        - name: filters[name]
          in: query
          required: false
          description: A filter query of the event status name
          schema:
            type: string
            example: "Draft"
        - name: limit
          in: query
          required: false
          description: The limit on the number of results to return per page
          schema:
            type: integer
            example: 25
        - name: page
          in: query
          required: false
          description: The page number to return
          schema:
            type: integer
            example: 1
        - name: sort
          in: query
          required: false
          description: A column to be used to sort the query
          schema:
            type: string
            example: name
        - name: direction
          in: query
          required: false
          description: A string indicating the sort direction of the query (asc or desc)
          schema:
            type: string
            example: asc
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pagination"
    post:
      tags:
        - event-statuses
      summary: Create event status
      operationId: createEventStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventStatusRequest"
      responses:
        "201":
          description: Successful response
          content:
            application/json: {}
  /api/event-statuses/{eventStatusId}:
    get:
      parameters:
        - name: eventStatusId
          description: The unique identifier of the event status
          in: path
          required: true
          schema:
            description: The unique identifier of an event status
            type: integer
            readOnly: true
            example: 1
      tags:
        - event-statuses
      summary: Get EventStatus
      operationId: getEventStatusById
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventStatusResponse"
    put:
      parameters:
        - name: eventStatusId
          description: The unique identifier of the event status
          in: path
          required: true
          schema:
            description: The unique identifier of an event status
            type: integer
            readOnly: true
            example: 1
      tags:
        - event-statuses
      summary: Update Event Status
      operationId: updateEventStatusById
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventStatusRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventStatusResponse"
  /api/tags:
    post:
      tags:
        - tags
      summary: Create Tag
      operationId: createTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tag"
      responses:
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
    get:
      tags:
        - tags
      summary: Get Tags
      operationId: getTags
      parameters:
        - name: filters[name]
          in: query
          schema:
            type: string
            example: techno
        - name: limit
          in: query
          required: false
          description: The limit on the number of results to return per page
          schema:
            type: integer
            example: 25
        - name: page
          in: query
          required: false
          description: The page number to return
          schema:
            type: integer
            example: 1
        - name: sort
          in: query
          required: false
          description: A column to be used to sort the query
          schema:
            type: string
            example: name
        - name: direction
          in: query
          required: false
          description: A string indicating the sort direction of the query (asc or desc)
          schema:
            type: string
            example: asc
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tags"
  /api/tags/{tagId}:
    get:
      tags:
        - tags
      summary: Get one Tag
      operationId: getTagById
      parameters:
        - name: tagId
          description: The unique identifier of the tag
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
    put:
      tags:
        - tags
      summary: Update Tag
      operationId: updateTagById
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tag"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/tokens/create:
    post:
      tags:
        - users
      summary: Create User Bearer Token
      operationId: createUserBearerToken
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserTokenResponse"
  /api/tokens/validate:
    get:
      tags:
        - users
      summary: Validate User Token
      operationId: validateUserToken
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    description: Valid user token
                    example: ABCDEF12345
  /api/roles:
    get:
      tags:
        - roles
      summary: Get Roles
      operationId: getRoles
      parameters:
        - name: filters[name]
          in: query
          required: false
          description: A filter query of the role name
          schema:
            type: string
            example: "dj"
        - name: limit
          in: query
          required: false
          description: The limit on the number of results to return per page
          schema:
            type: integer
            example: 25
        - name: page
          in: query
          required: false
          description: The page number to return
          schema:
            type: integer
            example: 1
        - name: sort
          in: query
          required: false
          description: A column to be used to sort the query
          schema:
            type: string
            example: name
        - name: direction
          in: query
          required: false
          description: A string indicating the sort direction of the query (asc or desc)
          schema:
            type: string
            example: asc
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Roles"
    post:
      tags:
        - roles
      summary: Create Role
      operationId: createRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleRequest"
      responses:
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
  /api/roles/{roleId}:
    parameters:
      - name: roleId
        description: The unique identifier of the role
        in: path
        required: true
        schema:
          type: integer
          readOnly: true
          example: 1
    get:
      tags:
        - roles
      summary: Get Role
      operationId: getRoleById
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
    put:
      tags:
        - roles
      summary: Update Role
      operationId: updateRoleById
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
  /api/users:
    post:
      tags:
        - users
      summary: Create User
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
      responses:
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
    get:
      tags:
        - users
      summary: Get Users
      operationId: getUsers
      parameters:
        - name: filters[status]
          in: query
          required: false
          description: A filter query of the user status
          schema:
            type: string
            example: Active
        - name: filters[name]
          in: query
          required: false
          description: A filter query of the user name
          schema:
            type: string
            example: Geoff
        - name: filters[email]
          in: query
          required: false
          description: A filter query of the user email
          schema:
            type: string
            example: geoff.maddock@gmail.com
        - name: limit
          in: query
          required: false
          description: The limit on the number of results to return per page
          schema:
            type: integer
            example: 25
        - name: page
          in: query
          required: false
          description: The page number to return
          schema:
            type: integer
            example: 1
        - name: sort
          in: query
          required: false
          description: A column to be used to sort the query
          schema:
            type: string
            example: name
        - name: direction
          in: query
          required: false
          description: A string indicating the sort direction of the query (asc or desc)
          schema:
            type: string
            example: asc
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
  /api/users/{userId}:
    get:
      tags:
        - users
      summary: Get one User by id
      operationId: getUserById
      parameters:
        - name: userId
          description: The unique identifier of the user
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
